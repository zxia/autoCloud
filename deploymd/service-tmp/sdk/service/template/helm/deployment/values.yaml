###### Define the cloud native service #####

## define the workload
server:
## define the workload as the deployment
  deployed: “true”
  name: test
  version: v1
  image:
    repository: "repository"
    tag:  "tag"
    pullPolicy: IfNotPresent
    imagePullSecrets: "secret"
## label the node with "schedulelabel=schedulelabel", the workload will be be scheduled to the labeled k8s node
  schedulelabel:  test
## the number of the replication of the pod
  replica: 1
  command:
    exec:  /bin/sh
    args:
      - c
      - |
        mkdir -p /test
        ls -lrt /test
  livenessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          curl --fail 127.0.0.1:5066
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
  readinessProbe:
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          filebeat test output
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
## define the resource for the pod
##  requests:
##    memory: "512Mi"
##    cpu: "500m"
##  limits:
##    memory: "1200Mi"
##    cpu: "1200m"
  resources: []
  externalContainerargs:
    ports:
      - containerPort: 9080
    securityContext:
      runAsUser: 1000
  volumeMounts:
    - name: tmp
      mountPath: /tmp
  volumes:
    - name: tmp
      emptyDir: { }
## define the environment variable

##define the K8s service for the workload, at lease should define the  exporter service to report measurement
##data to prometheus
service:
  - name: test
    protocols:
      - protocol: TCP
        port: 8081
        targetPort: 8081
## Service mesh with Istio
## see more ref. https://istio.io/latest/docs/concepts/traffic-management/#retries
istio:
  deployed: true
##define the istio gateway, istio ingress default gateway is ingressgateway
##define the receiving protocol and port , and the from host. allow any host with *
  gateway:
    - name: test-gateway
      selector: ingressgateway
      servers:
      - port:
          number: 443
          name: https
          protocol: HTTPS
        hosts:
          - "*"
        tls:
          mode: SIMPLE
          serverCertificate: /etc/certs/server.pem
          privateKey: /etc/certs/privatekey.pem
  virtualservice:
    name: test-vs
    hosts:
      - "*"
    gateway:
      - test-gateway
    http:
      - match:
          - headers:
              end-user:
                exact: jason v/./
            uri:
              prefix: "/ratings/v2/"
            ignoreUriCase: true
        route:
          - destination:
              host: ratings.prod.svc.cluster.local
  destination:
    name: test-dest
    host: test-host
    subsets:
      - name: v1
        labels:
          version: v1
      - name: v2
        labels:
          version: v2
