#////////////////////////////////////////////////////////////
#/
#/ File: deployment.yaml
#/
#////////////////////////////////////////////////////////////
#/
#/ Author: Xia Zeng Wu
#/
#/ Copyright (c) 2018, 2024 All rights reserved.
#/
#////////////////////////////////////////////////////////////
{{- if .Values.server.deployed | quote  "true" -}}
{{- $serverbase := (empty .Values.server.name | ternary  .Release.Name .Values.server.name   )  }}
{{- $server := printf "%s-%s" $serverbase .Values.server.version }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $server }}-server
  labels:
    app: {{ $server }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    version: {{ .Values.server.version }}
spec:
  selector:
    matchLabels:
      app: {{ $server }}
  replicas: {{ .Values.server.replica }}
  template:
    metadata:
      labels:
        app: {{ $server }}
        version: {{ .Values.server.version }}
        appbase: {{ $serverbase }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.server.schedulelabel }}
                    operator: In
                    values:
                      - {{ .Values.server.schedulelabel }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: {{ $server }}
                topologyKey: kubernetes.io/hostname
              weight: 1
{{- if not (empty .Values.server.image.imagePullSecrets) }}
      imagePullSecrets:
        - name: {{ .Values.server.image.imagePullSecrets }}
{{- end }}
      serviceAccountName: {{ $server }}
      containers:
        - name: {{ .Release.Name }}-image
          image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
{{- if .Values.server.resources }}
          resources:
            requests:
              memory:  {{ .Values.server.resources.requests.memory }}
              cpu: {{ .Values.server.resources.requests.cpu }}
            limits:
              memory: {{ .Values.server.resources.limits.memory }}
              cpu: {{ .Values.server.resources.limits.cpu }}
{{- end }}
{{- if .Values.server.command }}
          command:
            - {{ .Values.server.command }}
          args:
{{- range .Values.server.args }}
            - {{ . | quote }}
{{- end }}
{{- end }}
{{- if .Values.server.extraContainerargs }}
{{ toYaml .Values.server.extraContainerargs | indent 10 }}
{{- end  }}
{{- if .Values.server.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.server.livenessProbe | indent 12 }}
{{- end }}
{{- if .Values.server.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.server.readinessProbe | indent 12 }}
{{- end }}
          env:
{{- range .Values.server.env }}
{{- if . }}
            - name:  {{ .name }}
              value: {{ .value | quote }}
{{- end }}
{{- end }}
          volumeMounts:
            - name: cfg
              mountPath: "/opt/acx/{{ $serverbase }}/conf"
              readOnly: true
{{- if .Values.server.volumeMounts }}
{{ toYaml .Values.server.volumeMounts | indent 12 }}
{{- end }}
      volumes:
        - name: cfg
          configMap:
            name:  {{ $server }}-env
{{- if .Values.server.volumes }}
{{ toYaml .Values.server.volumes | indent 8 }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $server }}
  labels:
    account: {{ $server }}
{{- end }}

